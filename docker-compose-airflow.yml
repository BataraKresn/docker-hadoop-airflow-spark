x-airflow-common: &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-airflow-hadoop-base:3.3.6}
  environment:
    - AIRFLOW_HOME=/home/airflow
    - AIRFLOW__CORE__DAGS_FOLDER=/home/airflow/dags
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__LOGGING_LEVEL=INFO
  volumes:
    - ./output:/home/airflow/output
    - ./dags:/home/airflow/dags
    - ./plugins:/home/airflow/plugins
    - ./logs:/home/airflow/logs
    - ./data/:/hadoop-data/input
    - ./map_reduce/:/hadoop-data/map_reduce
  depends_on:
    - postgres
  networks:
    - hadoop_network

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_airflow:/var/lib/postgresql/data
    networks:
      - hadoop_network
    
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=bigdata0124@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=3J1}/Ux82Y5;
    ports:
      - "5050:5050" # Expose pgAdmin port for external access
    networks:
      - hadoop_network

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - airflow users list || ( airflow db init && airflow db migrate && airflow users create --role Admin --username airflow --password airflow --email airflow@airflow.com --firstname airflow --lastname airflow )
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    ports:
      - "8080:8080"
    container_name: airflow_webserver
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    container_name: airflow_scheduler
    restart: always

networks:
  hadoop_network:
    name: hadoop_network
    external: true